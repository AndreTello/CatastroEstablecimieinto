CREATE DATABASE POSCATASTROESTABLECIMIENTO
POSCATASTROESTABLECIMIENTO.CATASTROESTABLECIMIENTO
CREATE SCHEMA ADMINISTRACION;
CREATE SCHEMA CATASTROESTABLECIMIENTO;
CREATE SCHEMA AUDITORIA;

CREATE TABLE ADMINISTRACION.AD_ROL (
ROL_ID SERIAL NOT NULL PRIMARY KEY,
ROL_NOMBRE CHARACTER (100) NOT NULL,
ROL_DETALLE TEXT NOT NULL,
ROL_ESTADO INT NOT NULL
);
			
CREATE TABLE ADMINISTRACION.AD_PERMISO (
PERMISO_ID SERIAL NOT NULL PRIMARY KEY,
PERMISO_NOMBRE CHARACTER (100) NOT NULL,
PERMISO_DETALLE TEXT NOT NULL,
PERMISO_ESTADO INT NOT NULL
);
			
CREATE TABLE ADMINISTRACION.AD_ROL_PERMISO (
ROL_PERMISO_ID SERIAL NOT NULL PRIMARY KEY,
ROL_ID INT NOT NULL,
PERMISO_ID INT NOT NULL,
ROL_PERMISO_ESTADO INT NOT NULL,
CONSTRAINT AD_ROL_PERMISO_FKY01 FOREIGN KEY (ROL_ID) REFERENCES ADMINISTRACION.AD_ROL(ROL_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT AD_ROL_PERMISO_FKY02 FOREIGN KEY (PERMISO_ID) REFERENCES ADMINISTRACION.AD_PERMISO(PERMISO_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE ADMINISTRACION.AD_USUARIO (
USUARIO_ID SERIAL NOT NULL PRIMARY KEY,			
ROL_ID INT NOT NULL,
USUARIO_LOGIN CHARACTER (100) NOT NULL,
USUARIO_CLAVE CHARACTER (100) NOT NULL,
USUARIO_CEDULA CHARACTER (10) NOT NULL,
USUARIO_APELLIDOS CHARACTER (100) NOT NULL,
USUARIO_NOMBRES CHARACTER (100) NOT NULL,
USUARIO_MAIL CHARACTER (200) NOT NULL,
USUARIO_DIRECCION TEXT NOT NULL,
USUARO_TELEFONO CHARACTER (13) NOT NULL,
USUARIO_ESTADO INT NOT NULL,
CONSTRAINT CM_USUARIO_FKY01 FOREIGN KEY (ROL_ID) REFERENCES ADMINISTRACION.AD_ROL(ROL_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE CATASTROESTABLECIMIENTO.CM_PROVINCIA ( 
PROVINCIA_ID SERIAL NOT NULL PRIMARY KEY,
PROVINCIA_CODIGO CHARACTER (2) NOT NULL,
PROVINCIA_NOMBRE CHARACTER (50) NOT NULL,
PROVINCIA_OBSERVACION TEXT NOT NULL,
PROVINCIA_ESTADO INT NOT NULL
);

CREATE TABLE CATASTROESTABLECIMIENTO.CM_CANTON ( 
CANTON_ID SERIAL NOT NULL PRIMARY KEY,
PROVINCIA_ID INT NOT NULL,
CANTON_CODIGO CHARACTER (2) NOT NULL,
CANTON_NOMBRE CHARACTER (50) NOT NULL,
CANTON_OBSERVACION TEXT NOT NULL,
CANTON_ESTADO INT NOT NULL,
CONSTRAINT CM_CANTON_FKY01 FOREIGN KEY (PROVINCIA_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_PROVINCIA (PROVINCIA_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE CATASTROESTABLECIMIENTO.CM_ZONA (
ZONA_ID SERIAL NOT NULL PRIMARY KEY,
CANTON_ID INT NOT NULL,
ZONA_CODIGO CHARACTER (3) NOT NULL,
ZONA_NOMBRE CHARACTER (50) NOT NULL,
ZONA_OBSERVACION TEXT NOT NULL,
ZONA_ESTADO INT NOT NULL,
CONSTRAINT CM_ZONA_FKY01 FOREIGN KEY (CANTON_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_CANTON(CANTON_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE CATASTROESTABLECIMIENTO.CM_PARROQUIA (
PARROQUIA_ID SERIAL NOT NULL PRIMARY KEY,
ZONA_ID INT NOT NULL,
PARROQUIA_CODIGO CHARACTER (2) NOT NULL, 
PARROQUIA_NOMBRE CHARACTER (50) NOT NULL,
PARROQUIA_OBSERVACION TEXT NOT NULL,
PARROQUIA_ESTADO INT NOT NULL,
CONSTRAINT CM_PARROQUIA_FKY01 FOREIGN KEY (ZONA_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_ZONA(ZONA_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE CATASTROESTABLECIMIENTO.CM_MANZANA (
MANZANA_ID SERIAL NOT NULL PRIMARY KEY,
PARROQUIA_ID INT NOT NULL,
MANZANA_CODIGO CHARACTER (4) NOT NULL,
MANZANA_NOMBRE CHARACTER (50) NOT NULL,
MANZANA_OBSERVACION TEXT NOT NULL,
MANZANA_ESTADO INT NOT NULL,
CONSTRAINT CM_MANZANA_FKY01 FOREIGN KEY (PARROQUIA_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_PARROQUIA(PARROQUIA_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE CATASTROESTABLECIMIENTO.CM_LOTE (
LOTE_ID SERIAL NOT NULL PRIMARY KEY,
MANZANA_ID INT NOT NULL,
LOTE_CODIGO CHARACTER (3) NOT NULL,
LOTE_NOMBRE CHARACTER (50) NOT NULL,
LOTE_OBSERVACION TEXT NOT NULL,
LOTE_ESTADO INT NOT NULL,
CONSTRAINT CM_LOTE_FK01 FOREIGN KEY (MANZANA_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_MANZANA(MANZANA_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_ADMINISTRACION_ZONAL (
ADMINISTRACION_ZONAL_ID SERIAL NOT NULL PRIMARY KEY,
ADMINISTRACION_ZONAL_NOMBRE CHARACTER (100) NOT NULL,
ADMINISTRACION_ZONAL_DETALLE TEXT NOT NULL,
ADMINISTRACION_ZONAL_TELEFONO CHARACTER (15) NOT NULL,
ADMINISTRACION_ZONAL_CELULAR CHARACTER (15),
ADMINISTRACION_ZONAL_MAIL CHARACTER (100),
ADMINISTRACION_ZONAL_PAGINA_WEB CHARACTER (100), 
ADMINISTRACION_ZONAL_REPRESENTANTE CHARACTER (10),
ADMINISTRACION_ZONAL_ESTADO INT NOT NULL
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_ASOCIACION (
ASOCIACION_ID SERIAL NOT NULL PRIMARY KEY,
ASOCIACION_CODIGO CHARACTER (5) NOT NULL,
ASOCIACION_NOMBRE CHARACTER (100) NOT NULL,
ASOCIACION_TELEFONO CHARACTER (13) NOT NULL,
ASOCIACION_MAIL CHARACTER (50) NOT NULL,
ASOCIACION_CONTACTO CHARACTER (100) NOT NULL,
ASOCIACION_OBSERVACION TEXT NOT NULL,
ASOCIACION_ESTADO INT NOT NULL
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_TIPO_ESTABLECIMIENTO (
TIPO_ESTABLECIMIENTO_ID SERIAL NOT NULL PRIMARY KEY,
TIPO_ESTABLECIMIENTO_NOMBRE CHARACTER (100) NOT NULL,
TIPO_ESTABLECIMIENTO_DETALLE TEXT NOT NULL,
TIPO_ESTABLECIMIENTO_ESTADO INT NOT NULL
);	
			
CREATE TABLE CATASTROESTABLECIMIENTO.CM_TIPO_INTERVENCION_TECNICA_ESTABLECIMIENTO (
TIPO_INTERVENCION_TECNICA_ESTABLECIMIENTO_ID SERIAL NOT NULL PRIMARY KEY,
TIPO_INTERVENCION_TECNICA_ESTABLECIMIENTO_NOMBRE CHARACTER (100) NOT NULL,
TIPO_INTERVENCION_TECNICA_ESTABLECIMIENTO_DETALLE TEXT NOT NULL,
TIPO_INTERVENCION_TECNICA_ESTABLECIMIENTO_ESTADO INT NOT NULL
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_INTERVENCION_TECNICA_ESTABLECIMIENTO (
INTERVENCION_TECNICA_ESTABLECIMIENTO_ID SERIAL NOT NULL PRIMARY KEY,
TIPO_INTERVENCION_TECNICA_ESTABLECIMIENTO_ID INT NOT NULL,
INTERVENCION_TECNICA_ESTABLECIMIENTO_NOMBRE CHARACTER (50) NOT NULL,
INTERVENCION_TECNICA_ESTABLECIMIENTO_FECHA_INICIO CHARACTER (20) NOT NULL,
INTERVENCION_TECNICA_ESTABLECIMIENTO_FECHA_FIN CHARACTER (20) NOT NULL,
INTERVENCION_TECNICA_ESTABLECIMIENTO_ESTADO INT NOT NULL,
CONSTRAINT CM_INTERVENCION_TECNICA_ESTABLECIMIENTO_FKY01 FOREIGN KEY (TIPO_INTERVENCION_TECNICA_ESTABLECIMIENTO_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_TIPO_INTERVENCION_TECNICA_ESTABLECIMIENTO(TIPO_INTERVENCION_TECNICA_ESTABLECIMIENTO_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_ESTABLECIMIENTO (
ESTABLECIMIENTO_ID SERIAL NOT NULL PRIMARY KEY,
LOTE_ID INT NOT NULL,
ADMINISTRACION_ZONAL_ID INT NOT NULL,
TIPO_ESTABLECIMIENTO_ID INT NOT NULL,
ASOCIACION_ID INT NOT NULL, 
INTERVENCION_TECNICA_ESTABLECIMIENTO_ID INT NOT NULL, 
ESTABLECIMIENTO_PREDIO CHARACTER (5) NOT NULL,
ESTABLECIMIENTO_CLAVE_CATASTRAL CHARACTER (20) NOT NULL,
ESTABLECIMIENTO_NOMENCLATURA_VIAL CHARACTER (20), 
ESTABLECIMIENTO_CALLE_PRINCIPAL CHARACTER (100) NOT NULL,
ESTABLECIMIENTO_CALLE_SECUNDARIA CHARACTER (100) NOT NULL,
ESTABLECIMIENTO_PAQUEADERO CHARACTER (10) NOT NULL,
ESTABLECIMIENTO_NUMERO_PARQUEADERO INT NOT NULL,
ESTABLECIMIENTO_DIAS_APERTURA CHARACTER NOT NULL,
ESTABLECIMIENTO_HORARIO_ATENCION CHARACTER (100) NOT NULL,
ESTABLECIMIENTO_ESTADO INT NOT NULL,
CONSTRAINT CM_ESTABLECIMIENTO_FKY01 FOREIGN KEY (LOTE_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_LOTE(LOTE_ID),
CONSTRAINT CM_ESTABLECIMIENTO_FKY02 FOREIGN KEY (ADMINISTRACION_ZONAL_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_ADMINISTRACION_ZONAL(ADMINISTRACION_ZONAL_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT CM_ESTABLECIMIENTO_FKY03 FOREIGN KEY (TIPO_ESTABLECIMIENTO_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_TIPO_ESTABLECIMIENTO(TIPO_ESTABLECIMIENTO_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT CM_ESTABLECIMIENTO_FKY04 FOREIGN KEY (ASOCIACION_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_ASOCIACION(ASOCIACION_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT CM_ESTABLECIMIENTO_FKY05 FOREIGN KEY (INTERVENCION_TECNICA_ESTABLECIMIENTO_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_INTERVENCION_TECNICA_ESTABLECIMIENTO(INTERVENCION_TECNICA_ESTABLECIMIENTO_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);
			
CREATE TABLE CATASTROESTABLECIMIENTO.CM_BLOQUE (
BLOQUE_ID SERIAL NOT NULL PRIMARY KEY,
ESTABLECIMIENTO_ID INT NOT NULL,
BLOQUE_CODIGO CHARACTER (4) NOT NULL,
BLOQUE_NOMBRE CHARACTER (50) NOT NULL,
BLOQUE_OBSERVACION TEXT NOT NULL, 
BLOQUE_ESTADO INT NOT NULL,
CONSTRAINT CM_BLOQUE_FKY01 FOREIGN KEY (ESTABLECIMIENTO_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_ESTABLECIMIENTO(ESTABLECIMIENTO_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_PISO (
PISO_ID SERIAL NOT NULL PRIMARY KEY,
BLOQUE_ID INT NOT NULL,
PISO_CODIGO CHARACTER (2) NOT NULL,
PISO_NOMBRE CHARACTER (50) NOT NULL,
PISO_OBSERVACION TEXT NOT NULL,
PISO_ESTADO INT NOT NULL,
CONSTRAINT CM_PISO_FKY01 FOREIGN KEY (BLOQUE_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_BLOQUE(BLOQUE_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);
	
CREATE TABLE CATASTROESTABLECIMIENTO.CM_TIPO_AREA (
TIPO_AREA_ID SERIAL NOT NULL PRIMARY KEY,
TIPO_AREA_IDENTIFICACION CHARACTER (5) NOT NULL,
TIPO_AREA_NOMBRE CHARACTER (50) NOT NULL,
TIPO_AREA_OBSERVACION TEXT NOT NULL,
TIPO_AREA_ESTADO INT NOT NULL
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_TIPO_PRODUCTO (
TIPO_PRODUCTO_ID SERIAL NOT NULL PRIMARY KEY,
TIPO_PRODUCTO_NOMBRE CHARACTER (100) NOT NULL,
TIPO_PRODUCTO_DETALLE TEXT NOT NULL,
TIPO_PRODUCTO_OBSERVACION TEXT NOT NULL,
TIPO_PRODUCTO_ESTADO INT NOT NULL
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_AYUDANTE (
AYUDANTE_ID SERIAL NOT NULL PRIMARY KEY,
AYUDANTE_CEDULA CHARACTER (10) NOT NULL,
AYUDANTE_APELLIDOS CHARACTER (50) NOT NULL,				
AYUDANTE_NOMBRES CHARACTER (50) NOT NULL,
AYUDANTE_PARENTEZCO CHARACTER (50) NOT NULL,
AYUDANTE_AUTORIZACION CHARACTER (10) NOT NULL,
AYUDANTE_NUMERO_OFICIO CHARACTER (20) NOT NULL,
AYUDANTE_OFICIO_ARCHIVO BYTEA,
AYUDANTE_FECHA_OFICIO CHARACTER (20) NOT NULL,
AYUDANTE_ESTADO INT NOT NULL
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_REEMPLAZO (
REEMPLAZO_ID SERIAL NOT NULL PRIMARY KEY,
REEMPLAZO_CEDULA CHARACTER (10) NOT NULL,
REEMPLAZO_APELLIDOS CHARACTER (50) NOT NULL,
REEMPLAZO_NOMBRES CHARACTER (50) NOT NULL,
REEMPLAZO_AUTORIZACION CHARACTER (10) NOT NULL,
REEMPLAZO_NUMERO_OFICIO CHARACTER (20) NOT NULL,
REEMPLAZO_OFICIO_ARCHIVO BYTEA,
REEMPLAZO_FECHA_INICIO CHARACTER (20) NOT NULL,
REEMPLAZO_FECHA_FIN CHARACTER (20) NOT NULL,
REEMPLAZO_ESTADO INT NOT NULL
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_GIRO_NEGOCIO (
GIRO_NEGOCIO_ID SERIAL NOT NULL PRIMARY KEY,
TIPO_PRODUCTO_ID INT NOT NULL,
GIRO_NEGOCIO_NOMBRE CHARACTER (100) NOT NULL,
GIRO_NEGOCIO_SUBGIRO CHARACTER (100) NOT NULL,			
GIRO_NEGOCIO_ABASTECIMIENTO CHARACTER (100) NOT NULL,
GIRO_NEGOCIO_OBSERVACION TEXT NOT NULL,
GIRO_NEGOCIO_ESTADO INT NOT NULL,
CONSTRAINT CM_GIRO_NEGOCIO_FKY01 FOREIGN KEY (TIPO_PRODUCTO_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_TIPO_PRODUCTO(TIPO_PRODUCTO_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);
					
CREATE TABLE CATASTROESTABLECIMIENTO.CM_TIPO_IDENTIFICACION (
TIPO_IDENTIFICACION_ID SERIAL NOT NULL PRIMARY KEY,
TIPO_IDENTIFICACION_NOMBRE CHARACTER (50) NOT NULL,
TIPO_IDENTIFICACION_DETALLE TEXT NOT NULL,
TIPO_IDENTIFICACION_ESTADO INT NOT NULL
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_ETNIA (
ETNIA_ID SERIAL NOT NULL PRIMARY KEY,
ETNIA_NOMBRE CHARACTER (100) NOT NULL,
ETNIA_DETALLE TEXT NOT NULL,
ETNIA_ESTADO INT NOT NULL
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_GENERO (
GENERO_ID SERIAL NOT NULL PRIMARY KEY,
GENERO_NOMBRE CHARACTER (100) NOT NULL,
GENERO_DETALLE TEXT NOT NULL,
GENERO_ESTADO INT NOT NULL
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_ESTADO_CIVIL (
ESTADO_CIVIL_ID SERIAL NOT NULL PRIMARY KEY,
ESTADO_CIVIL_NOMBRE CHARACTER (100) NOT NULL,
ESTADO_CIVIL_DETALLE TEXT NOT NULL,
ESTADO_CIVIL_ESTADO INT NOT NULL
);				

CREATE TABLE CATASTROESTABLECIMIENTO.CM_NACIONALIDAD (
NACIONALIDAD_ID SERIAL NOT NULL PRIMARY KEY,
NACIONALIDAD_CODIGO CHARACTER (3) NOT NULL,
NACIONALIDAD_NOMBRE CHARACTER (100) NOT NULL,
NACIONALIDAD_DETALLE TEXT NOT NULL,
NACIONALIDAD_ESTADO INT NOT NULL
);	
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_NIVEL_EDUCACION (
NIVEL_EDUCACION_ID SERIAL NOT NULL PRIMARY KEY,
NIVEL_EDUCACION_NOMBRE CHARACTER (100) NOT NULL,
NIVEL_EDUCACION_DETALLE TEXT NOT NULL,
NIVEL_EDUCACION_ESTADO INT NOT NULL
);	
			
CREATE TABLE CATASTROESTABLECIMIENTO.CM_DISCAPACIDAD (
DISCAPACIDAD_ID SERIAL NOT NULL PRIMARY KEY,
DISCAPACIDAD_CARNET CHARACTER (100) NOT NULL,
DISCAPACIDAD_NOMBRE CHARACTER (200) NOT NULL,
DISCAPACIDAD_PORCENTAJE DECIMAL (5,2),
DISCAPACIDAD_ESTADO INT NOT NULL
);				
	
CREATE TABLE CATASTROESTABLECIMIENTO.CM_TIPO_OCUPANTE (
TIPO_OCUPANTE_ID SERIAL NOT NULL PRIMARY KEY,
TIPO_OCUPANTE_NOMBRE CHARACTER (100) NOT NULL,
TIPO_OCUPANTE_DETALLE TEXT,
TIPO_OCUPANTE_ESTADO INT NOT NULL 				
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_COMERCIANTE (
COMERCIANTE_ID SERIAL NOT NULL PRIMARY KEY,
TIPO_IDENTIFICACION_ID INT NOT NULL,
TIPO_OCUPANTE_ID INT NOT NULL,
COMERCIANTE_CEDULA_RUC CHARACTER (13) NOT NULL,
COMERCIANTE_APELLIDOS_RAZON_SOCIAL CHARACTER (100) NOT NULL,
COMERCIANTE_NOMBRES_REPRESENTANTE_LEGAL CHARACTER (100) NOT NULL,
COMERCIANTE_FECHA_NACIMIENTO CHARACTER (50),
COMERCIANTE_EDAD INT, 
COMERCIANTE_LUGAR_ORIGEN CHARACTER (100),
COMERCIANTE_TELEFONO_CONVENCIONAL CHARACTER (13),
COMERCIANTE_TELEFONO_CELULAR CHARACTER (13),
COMERCIANTE_DIRECCION_DOMICILIO CHARACTER (100),
COMERCIANTE_CIUDAD CHARACTER (100),
COMERCIANTE_PROVINCIA CHARACTER (100),
COMERCIANTE_MAIL CHARACTER (100),
COMERCIANTE_ESTADO INT NOT NULL,
CONSTRAINT CM_COMERCIANTE_FKY01 FOREIGN KEY (TIPO_IDENTIFICACION_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_TIPO_IDENTIFICACION(TIPO_IDENTIFICACION_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT CM_COMERCIANTE_FKY02 FOREIGN KEY (TIPO_OCUPANTE_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_TIPO_OCUPANTE(TIPO_OCUPANTE_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_IDENTIFICACION_SOCIO_ECONOMICA ( 
IDENTIFICACION_SOCIO_ECONOMICA_ID SERIAL NOT NULL PRIMARY KEY,
COMERCIANTE_ID INT NOT NULL,
ETNIA_ID INT NOT NULL,
GENERO_ID INT NOT NULL,
ESTADO_CIVIL_ID INT NOT NULL,
NACIONALIDAD_ID INT NOT NULL, 
NIVEL_EDUCACION_ID INT NOT NULL,
DISCAPACIDAD_ID INT NOT NULL,
IDENTIFICACION_SOCIO_ECONOMICA_JEFE_FAMILIA CHARACTER (10) NOT NULL,
IDENTIFICACION_SOCIO_ECONOMICA_DEPENDIENTES CHARACTER (10) NOT NULL,
IDENTIFICACION_SOCIO_ECONOMICA_NUMERO_DEPENDIENTES INT NOT NULL,
IDENTIFICACION_SOCIO_ECONOMICA_PARENTESCO CHARACTER (100),
IDENTIFICACION_SOCIO_ECONOMICA_ESTADO INT NOT NULL,
CONSTRAINT CM_IDENTIFICACION_SOCIO_ECONOMICA_FKY01 FOREIGN KEY (COMERCIANTE_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_COMERCIANTE(COMERCIANTE_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT CM_IDENTIFICACION_SOCIO_ECONOMICA_FKY02 FOREIGN KEY (ETNIA_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_ETNIA(ETNIA_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT CM_IDENTIFICACION_SOCIO_ECONOMICA_FKY03 FOREIGN KEY (GENERO_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_GENERO(GENERO_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT CM_IDENTIFICACION_SOCIO_ECONOMICA_FKY04 FOREIGN KEY (ESTADO_CIVIL_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_ESTADO_CIVIL(ESTADO_CIVIL_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT CM_IDENTIFICACION_SOCIO_ECONOMICA_FKY05 FOREIGN KEY (NACIONALIDAD_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_NACIONALIDAD(NACIONALIDAD_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT CM_IDENTIFICACION_SOCIO_ECONOMICA_FKY06 FOREIGN KEY (NIVEL_EDUCACION_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_NIVEL_EDUCACION(NIVEL_EDUCACION_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,				
CONSTRAINT CM_IDENTIFICACION_SOCIO_ECONOMICA_FKY07 FOREIGN KEY (DISCAPACIDAD_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_DISCAPACIDAD(DISCAPACIDAD_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);	
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_TIPO_FAMILIAR (
TIPO_FAMILIAR_ID SERIAL NOT NULL PRIMARY KEY,
TIPO_FAMILIAR_NOMBRE CHARACTER (100) NOT NULL,
TIPO_FAMILIAR_DETALLE TEXT NOT NULL,
TIPO_FAMILAR_ESTADO INT NOT NULL
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_FAMILIAR (
FAMILIAR_ID SERIAL NOT NULL PRIMARY KEY,
TIPO_FAMILIAR_ID INT NOT NULL,
COMERCIANTE_ID INT NOT NULL,
FAMILIAR_CEDULA CHARACTER (10) NOT NULL,
FAMILIAR_APELLIDOS CHARACTER (100) NOT NULL,
FAMILIAR_NOMBRES CHARACTER (100) NOT NULL, 
FAMILIAR_APORTE_ECONOMICO DECIMAL (5,2),
FAMILIAR_PROMEDIO_INGRESO DECIMAL (5,2),
FAMILIAR_MENOR_EDAD CHARACTER (10) NOT NULL,
FAMILIAR_ESCOLARIDAD CHARACTER (10) NOT NULL,
FAMILIAR_ESTADO INT NOT NULL,
CONSTRAINT CM_FAMILIAR_FKY01 FOREIGN KEY (COMERCIANTE_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_COMERCIANTE(COMERCIANTE_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT CM_FAMILIAR_FKY02 FOREIGN KEY (TIPO_FAMILIAR_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_TIPO_FAMILIAR(TIPO_FAMILIAR_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_TIPO_DOCUMENTO_COMERCIANTE (
TIPO_DOCUMENTO_COMERCIANTE_ID SERIAL NOT NULL PRIMARY KEY,
TIPO_DOCUMENTO_COMERCIANTE_NOMBRE CHARACTER (50) NOT NULL,
TIPO_DOCUMENTO_COMERCIANTE_ESTADO INT NOT NULL
);
			
CREATE TABLE CATASTROESTABLECIMIENTO.CM_DOCUMENTO_COMERCIANTE (
DOCUMENTO_COMERCIANTE_ID SERIAL NOT NULL PRIMARY KEY,
TIPO_DOCUMENTO_COMERCIANTE_ID INT NOT NULL,
COMERCIANTE_ID INT NOT NULL,
DOCUMENTO_COMERCIANTE_NOMBRE CHARACTER (100) NOT NULL,
DOCUMENTO_COMERCIANTE_FECHA CHARACTER (20) NOT NULL,
DOCUMENTO_COMERCIANTE_ARCHIVO BYTEA,
DOCUMENTO_COMERCIANTE_DETALLE TEXT NOT NULL,
DOCUMENTO_COMERCIANTE_OBSERVACION TEXT NOT NULL,
DOCUMENTO_COMERCIANTE_ESTADO INT NOT NULL,
CONSTRAINT CM_DOCUMENTO_COMERCIANTE_FKY01 FOREIGN KEY (TIPO_DOCUMENTO_COMERCIANTE_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_TIPO_DOCUMENTO_COMERCIANTE(TIPO_DOCUMENTO_COMERCIANTE_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT CM_DOCUMENTO_COMERCIANTE_FKY02 FOREIGN KEY (COMERCIANTE_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_COMERCIANTE(COMERCIANTE_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);				
					
CREATE TABLE CATASTROESTABLECIMIENTO.CM_TIPO_DOCUMENTO_PUESTO (
TIPO_DOCUMENTO_PUESTO_ID SERIAL NOT NULL PRIMARY KEY,
TIPO_DOCUMENTO_PUESTO_NOMBRE CHARACTER (50) NOT NULL,
TIPO_DOCUMENTO_PUESTO_ESTADO INT NOT NULL
);
			
CREATE TABLE CATASTROESTABLECIMIENTO.CM_DOCUMENTO_PUESTO (
DOCUMENTO_PUESTO_ID SERIAL NOT NULL PRIMARY KEY,
TIPO_DOCUMENTO_PUESTO_ID INT NOT NULL,
PUESTO_ID INT NOT NULL,
DOCUMENTO_PUESTO_NOMBRE CHARACTER (100) NOT NULL,
DOCUMENTO_PUESTO_FECHA CHARACTER (20) NOT NULL,
DOCUMENTO_PUESTO_ARCHIVO BYTEA,
DOCUMENTO_PUESTO_DETALLE TEXT NOT NULL,
DOCUMENTO_PUESTO_OBSERVACION TEXT NOT NULL,
DOCUMENTO_PUESTO_ESTADO INT NOT NULL,
CONSTRAINT CM_DOCUMENTO_PUESTO_FKY01 FOREIGN KEY (TIPO_DOCUMENTO_PUESTO_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_TIPO_DOCUMENTO_PUESTO(TIPO_DOCUMENTO_PUESTO_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);
						
CREATE TABLE CATASTROESTABLECIMIENTO.CM_PUESTO (
PUESTO_ID SERIAL NOT NULL PRIMARY KEY,
PISO_ID INT NOT NULL,
TIPO_AREA_ID INT NOT NULL,
COMERCIANTE_ID INT NOT NULL,
AYUDANTE_ID INT NOT NULL,
REEMPLAZO_ID INT NOT NULL,
DOCUMENTO_PUESTO_ID INT NOT NULL,
PUESTO_PREDIO CHARACTER (4) NOT NULL,
PUESTO_CLAVE_CATASTRAL CHARACTER (20) NOT NULL,
PUESTO_AREA DECIMAL (5,2),
PUESTO_FRENTE DECIMAL (5,2,
PUESTO_FONDO DECIMAL (5,2),
PUESTO_ESTADO_CONSERVACION TEXT NOT NULL,
PUESTO_ACABADOS TEXT NOT NULL,
PUESTO_PAREDES TEXT NOT NULL,
PUESTO_REMODELACION TEXT NOT NULL,
PUESTO_ESTADO INT NOT NULL,
CONSTRAINT CM_PUESTO_FKY01 FOREIGN KEY (PISO_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_PISO(PISO_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT CM_PUESTO_FKY02 FOREIGN KEY (TIPO_AREA_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_TIPO_AREA(TIPO_AREA_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT CM_PUESTO_FKY03 FOREIGN KEY (COMERCIANTE_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_COMERCIANTE(COMERCIANTE_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT CM_PUESTO_FKY04 FOREIGN KEY (AYUDANTE_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_AYUDANTE(AYUDANTE_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT CM_PUESTO_FKY05 FOREIGN KEY (REEMPLAZO_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_REEMPLAZO(REEMPLAZO_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT CM_PUESTO_FKY06 FOREIGN KEY (DOCUMENTO_PUESTO_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_DOCUMENTO_PUESTO(DOCUMENTO_PUESTO_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);
				
CREATE TABLE CATASTROESTABLECIMIENTO.CM_ESTATUS_LEGAL (
ESTATUS_LEGAL_ID SERIAL NOT NULL PRIMARY KEY,
PUESTO_ID INT NOT NULL,				
GIRO_NEGOCIO_ID INT NOT NULL,
ESTATUS_LEGAL_FECHA_OCUPACION CHARACTER (20) NOT NULL,
ESTATUS_LEGAL_HISTORIAL TEXT NOT NULL,
ESTATUS_LEGAL_ESTADO_ADJUDICADO INT NOT NULL, 
ESTATUS_LEGAL_NUMERO_PUESTO_ADJUDICADO INT NOT NULL,
ESTATUS_LEGAL_CONDICION_USO TEXT NOT NULL,
ESTATUS_LEGAL_CARTA_ADJUDICACION BYTEA, 
ESTATUS_LEGAL_FECHA_NOTIFICACION CHARACTER (20) NOT NULL,
ESTATUS_LEGAL_ACTA_RESOLUCION_NOTIFICACION BYTEA,
ESTATUS_LEGAL_FECHA_RESOLUCION_NOTIFICACION CHARACTER (20) NOT NULL,
ESTATUS_LEGAL_CONVENIO_NOMBRE TEXT NOT NULL,
ESTATUS_LEGAL_CONVENIO_NUMERO INT NOT NULL,
ESTATUS_LEGAL_CONVENIO_FECHA CHARACTER (20) NOT NULL,
ESTATUS_LEGAL_CONDICION TEXT NOT NULL,
ESTATUS_LEGAL_CAMBIO_GIRO INT NOT NULL,
ESTATUS_LEGAL_NUMERO_OFICIO_CAMBIO_GIRO CHARACTER (20),
ESTATUS_LEGAL_FECHA_CAMBIO_GIRO CHARACTER (20),
ESTATUS_LEGAL_SANCIONES TEXT, 
ESTATUS_LEGAL_NUMERO_RESOLUCION_SANCION CHARACTER (20),
ESTATUS_LEGAL_FECHA_RESOLUCION_SANCION CHARACTER (20),
ESTATUS_LEGAL_ESTADO INT NOT NULL,
CONSTRAINT CM_ESTATUS_LEGAL_FKY01 FOREIGN KEY (PUESTO_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_PUESTO(PUESTO_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT CM_ESTATUS_LEGAL_FKY03 FOREIGN KEY (GIRO_NEGOCIO_ID) REFERENCES CATASTROESTABLECIMIENTO.CM_GIRO_NEGOCIO(GIRO_NEGOCIO_ID) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
);

			
			REVOKE CREATE ON SCHEMA AUDITORIA FROM PUBLIC;
			CREATE TABLE AUDITORIA.ACCIONES_REGISTRADAS (
				ESQUEMA TEXT NOT NULL,
				TABLA TEXT NOT NULL,
				USUARIO TEXT,
				FECHA TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
				ACCION TEXT NOT NULL CHECK (ACCION IN ('I','D','U')),
				DATO_ORIGINAL TEXT,
				DATO_NUEVO TEXT,
				CONSULTA TEXT
			) WITH (FILLFACTOR=100);
			REVOKE ALL ON AUDITORIA.ACCIONES_REGISTRADAS FROM PUBLIC; 
	
			GRANT SELECT ON AUDITORIA.ACCIONES_REGISTRADAS TO PUBLIC;
			CREATE INDEX LOGGED_ACTIONS_SCHEMA_TABLE_IDX 
				ON AUDITORIA.ACCIONES_REGISTRADAS(((ESQUEMA||'.'||TABLA)::TEXT));
			CREATE INDEX LOGGED_ACTIONS_ACTION_TSTAMP_IDX 
				ON AUDITORIA.ACCIONES_REGISTRADAS(FECHA);
			CREATE INDEX LOGGED_ACTIONS_ACTION_IDX 
				ON AUDITORIA.ACCIONES_REGISTRADAS(ACCION);
	
			CREATE OR REPLACE FUNCTION AUDITORIA.MODIFICACIONES() RETURNS TRIGGER AS $BODY$
			DECLARE
				V_OLD_DATA TEXT;
				V_NEW_DATA TEXT;
			BEGIN
			IF (TG_OP = 'UPDATE') THEN
				V_OLD_DATA := ROW(OLD.*);
				V_NEW_DATA := ROW(NEW.*);
				INSERT INTO AUDITORIA.ACCIONES_REGISTRADAS (ESQUEMA,TABLA,USUARIO,ACCION,DATO_ORIGINAL,DATO_NUEVO,CONSULTA) 
				VALUES (TG_TABLE_SCHEMA::TEXT,TG_TABLE_NAME::TEXT,SESSION_USER::TEXT,SUBSTRING(TG_OP,1,1),V_OLD_DATA,V_NEW_DATA, CURRENT_QUERY());
				RETURN NEW;
			ELSIF (TG_OP = 'DELETE') THEN
				V_OLD_DATA := ROW(OLD.*);
				INSERT INTO AUDITORIA.ACCIONES_REGISTRADAS (ESQUEMA,TABLA,USUARIO,ACCION,DATO_ORIGINAL,CONSULTA)
				VALUES (TG_TABLE_SCHEMA::TEXT,TG_TABLE_NAME::TEXT,SESSION_USER::TEXT,SUBSTRING(TG_OP,1,1),V_OLD_DATA, CURRENT_QUERY());
				RETURN OLD;
			ELSIF (TG_OP = 'INSERT') THEN
				V_NEW_DATA := ROW(NEW.*);
				INSERT INTO AUDITORIA.ACCIONES_REGISTRADAS (ESQUEMA,TABLA,USUARIO,ACCION,DATO_NUEVO,CONSULTA)
				VALUES (TG_TABLE_SCHEMA::TEXT,TG_TABLE_NAME::TEXT,SESSION_USER::TEXT,SUBSTRING(TG_OP,1,1),V_NEW_DATA, CURRENT_QUERY());
				RETURN NEW;
			ELSE
				RAISE WARNING '[AUDITORIA.MODIFICACIONES] - OTHER ACTION OCCURRED: %, AT %',TG_OP,NOW();
				RETURN NULL;
			END IF;
			EXCEPTION
			WHEN DATA_EXCEPTION THEN
				RAISE WARNING '[AUDITORIA.MODIFICACIONES] - UDF ERROR [DATA EXCEPTION] - SQLSTATE: %, SQLERRM: %',SQLSTATE,SQLERRM;
				RETURN NULL;
			WHEN UNIQUE_VIOLATION THEN
				RAISE WARNING '[AUDITORIA.MODIFICACIONES] - UDF ERROR [UNIQUE] - SQLSTATE: %, SQLERRM: %',SQLSTATE,SQLERRM;
				RETURN NULL;
			WHEN OTHERS THEN
				RAISE WARNING '[AUDITORIA.MODIFICACIONES] - UDF ERROR [OTHER] - SQLSTATE: %, SQLERRM: %',SQLSTATE,SQLERRM;
				RETURN NULL;
			END;
			$BODY$
			LANGUAGE PLPGSQL
			SECURITY DEFINER
			SET SEARCH_PATH = PG_CATALOG, AUDITORIA;
			
			CREATE TRIGGER T_IF_MODIFIED_TRG_ROL 
			AFTER INSERT OR UPDATE OR DELETE ON ADMINISTRACION.AD_ROL
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_PERMISO 
			AFTER INSERT OR UPDATE OR DELETE ON ADMINISTRACION.AD_PERMISO
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();
			
			CREATE TRIGGER T_IF_MODIFIED_TRG_ROL_PERMISO 
			AFTER INSERT OR UPDATE OR DELETE ON ADMINISTRACION.AD_ROL_PERMISO
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_USUARIO
			AFTER INSERT OR UPDATE OR DELETE ON ADMINISTRACION.AD_USUARIO
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();
			
			CREATE TRIGGER T_IF_MODIFIED_TRG_PROVINCIA 
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_PROVINCIA
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();
			
			CREATE TRIGGER T_IF_MODIFIED_TRG_CANTON
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_CANTON
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();
			
			CREATE TRIGGER T_IF_MODIFIED_TRG_ZONA
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_ZONA
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();			
			
			CREATE TRIGGER T_IF_MODIFIED_TRG_PARROQUIA
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_CANTON
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();			
			
			CREATE TRIGGER T_IF_MODIFIED_TRG_MANZANA
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_MANZANA
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();			
			
			CREATE TRIGGER T_IF_MODIFIED_TRG_LOTE
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_LOTE
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();			
			
			CREATE TRIGGER T_IF_MODIFIED_TRG_ADMINISTRACION_ZONAL
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_ADMINISTRACION_ZONAL
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_ASOCIACION
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_ASOCIACION
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_TIPO_ESTABLECIMIENTO
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_TIPO_ESTABLECIMIENTO
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_TIPO_INTERVENCION_TECNICA_ESTABLECIMIENTO
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_TIPO_INTERVENCION_TECNICA_ESTABLECIMIENTO
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_INTERVECNCION_TECNICA_ESTABLECIMIENTO
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_INTERVENCION_TECNICA_ESTABLECIMIENTO
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_ESTABLECIMIENTO
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_ESTABLECIMIENTO
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_BLOQUE
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_BLOQUE
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_PISO
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_PISO
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_TIPO_AREA
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_TIPO_AREA
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_TIPO_PRODUCTO
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_TIPO_PRODUCTO
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_AYUDANTE
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_AYUDANTE
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_REEMPLAZO
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_REEMPLAZO
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_GIRO_NEGOCIO
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_GIRO_NEGOCIO
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_TIPO_IDENTIFICACION
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_TIPO_IDENTIFICACION
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_ETNIA
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_ETNIA
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_GENERO
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_GENERO
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_ESTADO_CIVIL
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_ESTADO_CIVIL
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_NACIONALIDAD
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_NACIONALIDAD
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_NIVEL_EDUCACION
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_NIVEL_EDUCACION
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_DISCAPACIDAD
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_DISCAPACIDAD
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_TIPO_OCUPANTE
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_TIPO_OCUPANTE
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_COMERCIANTE
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_COMERCIANTE
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_TIPO_FAMILIAR
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_TIPO_FAMILIAR
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_FAMILIAR
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_FAMILIAR
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_TIPO_DOCUMENTO_COMERCIANTE
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_TIPO_DOCUMENTO_COMERCIANTE
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_DOCUMENTO_COMERCIANTE
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_DOCUMENTO_COMERCIANTE
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_TIPO_AREA
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_TIPO_DOCUMENTO_PUESTO
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_DOCUMENTO_PUESTO
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_DOCUMENTO_PUESTO
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_PUESTO
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_PUESTO
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();

			CREATE TRIGGER T_IF_MODIFIED_TRG_ESTATUS_LEGAL
			AFTER INSERT OR UPDATE OR DELETE ON CATASTROESTABLECIMIENTO.CM_ESTATUS_LEGAL
			FOR EACH ROW EXECUTE PROCEDURE AUDITORIA.MODIFICACIONES();
